{"version":3,"sources":["Components/TextFieldComponent/textfieldcomponent.jsx","api-handler.js","Components/LoginPage/loginPage.jsx","Components/NavigationBar/navigation-bar.jsx","Components/SignUp/signup.jsx","Components/Dashboard/dashboard.jsx","Components/Home/home.jsx","Components/RightBar/RightBar.jsx","Components/CodeShare/codeshare.jsx","App.js","serviceWorker.js","index.js"],"names":["TextFieldComponent","props","TextField","id","label","variant","value","style","type","onChange","event","onChangeTextField","target","post","routeURL","postData","success","error","Promise","resolve","reject","axios","then","res","console","log","status","data","catch","err","LoginPage","state","email","password","redirectToDashboard","field","setState","Login","loginTrue","localStorage","setItem","JSON","stringify","user","this","to","className","width","position","left","transform","marginTop","Button","onClick","backgroundColor","color","height","fontSize","fontFamily","Component","NavigationBar","openDialog","rediectToHome","AppBar","Toolbar","Typography","component","Link","textDecoration","border","marginRight","login","Fragment","marginLeft","logout","Dialog","onClose","fullWidth","maxWidth","aria-labelledby","open","window","location","href","SignUp","FirstName","LastName","Email","Password","ConfirmPassword","LoginID","redirectToLogin","onSignUp","first_name","last_name","login_id","noValidate","autoComplete","onSubmit","Dashboard","url","redirectToCodeShare","codes","getCodesData","_id","renderTableHeader","renderTableData","map","index","URL","Title","Syntax","ModifiedDate","CreatedDate","key","ShareCodeNow","userId","code","socket","emit","io","connect","Home","Grid","container","justify","item","Paper","RightBar","CodeShareScreen","match","params","on","name","rows","cols","e","room","placeholder","withRouter","App","parse","getItem","clear","exact","path","render","children","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0f5ac68a.chunk.js","sourcesContent":["import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport \"./style.css\";\r\n// import Visibility from '@material-ui/icons/Visibility';\r\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n\r\nconst TextFieldComponent = (props) => {\r\n    return ( \r\n        <TextField \r\n            id=\"outlined-search\" \r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            value={props.value}\r\n            style={{...props.style}} \r\n            type={props.type?props.type:\"text\"}\r\n            onChange={(event)=>props.onChangeTextField(event.target.value)}\r\n        /> );\r\n}\r\n \r\nexport default TextFieldComponent;","import axios from \"axios\";\r\n\r\nconst basicUrl = \"api\";\r\n\r\nexport function post(routeURL, postData, success , error) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(basicUrl+routeURL, postData).then(res => {\r\n            console.log('res',res)\r\n            if(res.status && success) success()\r\n            resolve(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log('err',err)\r\n            if(error) error()\r\n            reject(err)\r\n        });\r\n    });\r\n}\r\nexport function get(routeURL, postData, success , error) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(basicUrl+routeURL, postData).then(res => {\r\n            console.log('res',res)\r\n            if(res.status && success) success()\r\n            resolve(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log('err',err)\r\n            if(error) error()\r\n            reject(err)\r\n        });\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport \"./style.css\";\r\nimport TextFieldComponent from \"../TextFieldComponent/textfieldcomponent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\nimport { post } from '../../api-handler';\r\nclass LoginPage extends Component {\r\n    state = { \r\n        email:\"\",\r\n        password:\"\",\r\n        redirectToDashboard:false\r\n    }\r\n    onChangeTextField=(field,value)=>{\r\n        this.setState({\r\n            [field]:value\r\n        })\r\n    }\r\n    Login=()=>{\r\n        post('/login',{\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        },()=>{\r\n            this.setState({redirectToDashboard:true})\r\n            this.props.loginTrue()\r\n        }).then((res)=>{\r\n            localStorage.setItem(\"userData\",JSON.stringify(res.user))\r\n        })\r\n    }\r\n    render() { \r\n        if(this.state.redirectToDashboard) return <Redirect to=\"/codes\"/>\r\n        return <div className=\"main-wrapper\">\r\n            <div style={{\r\n            width:\"754px\",\r\n            position:\"absolute\",\r\n            left:\"50%\",\r\n            transform:\"translateX(-50%)\"\r\n        }}>\r\n            <div className=\"login-header\">Log in to Access Web Coder</div>\r\n            <TextFieldComponent\r\n                style={{    \r\n                    position: \"absolute\",\r\n                    left: \"50%\",\r\n                    transform:\" translateX(-50%)\",\r\n                    marginTop : \"100px\"\r\n                }}\r\n                label=\"Email\"\r\n                value={this.state.email}\r\n                onChangeTextField={(value)=>this.onChangeTextField(\"email\",value)}\r\n            /> \r\n            <TextFieldComponent\r\n                style={{    \r\n                    position: \"relative\",\r\n                    left: \"50%\",\r\n                    transform:\" translateX(-50%)\",\r\n                    marginTop: \"180px\"\r\n                }}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={this.state.password}\r\n                onChangeTextField={(value)=>this.onChangeTextField(\"password\",value)}\r\n\r\n            /> \r\n            <Button variant=\"contained\" \r\n            onClick={this.Login}\r\n            style={{\r\n                position:\"relative\",\r\n                backgroundColor:\"#F25F5C\",\r\n                color:\"#FFE066\",\r\n                width: \"378px\",\r\n                left: \"50%\",\r\n                transform: \"translateX(-50%)\",\r\n                marginTop:\"20px\",\r\n                height:\"45px\",\r\n                fontSize: \"16px\",\r\n                fontFamily: \"Spartan\"\r\n            }}>Log In</Button>\r\n            <div className=\"note\">New to WebCoder? <NavLink className=\"NavLink\" to=\"/signup\">Register Here</NavLink> .</div>\r\n            <div className=\"note\"><NavLink to=\"/signup\" className=\"NavLink\">Forgot Your Password?</NavLink></div>        \r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n \r\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport \"./style.css\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link,Redirect} from \"react-router-dom\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nclass NavigationBar extends Component {\r\n    \r\n    state={\r\n        openDialog:false,\r\n        rediectToHome:false\r\n    }\r\n    \r\n\r\n    render() { \r\n        if(this.state.rediectToHome) return <Redirect to=\"/\"/>\r\n        return ( \r\n            <AppBar>\r\n                <Toolbar className=\"toolbar-style\">\r\n                    <Typography variant=\"h6\" className=\"main-heading\" component={Link} to=\"/\" style={{textDecoration:\"none\",color:\"white\"}}>\r\n                        Web Coder\r\n                    </Typography>\r\n                    \r\n                    <Button \r\n                        color=\"inherit\" \r\n                        className=\"share1-btn btn login-btn\"\r\n                        style={{\r\n                            border : \"1px solid white\",\r\n                            marginRight: \"30px\"\r\n                        }}\r\n                        onClick={()=>{\r\n                            this.setState({openDialog:true})\r\n                        }}\r\n                        >\r\n                            Share\r\n                    </Button>\r\n                    {this.props.login ?\r\n                        <React.Fragment>\r\n                            <Button \r\n                                color=\"inherit\" \r\n                                className=\"btn\"\r\n                                style={{\r\n                                    marginLeft:\"200px\"\r\n                                }}\r\n                                onClick={()=>{\r\n                                    this.props.logout()\r\n                                    this.setState({rediectToHome:true})\r\n                                }}\r\n                                >\r\n                                    Logout\r\n                            </Button>\r\n\r\n                        </React.Fragment>:\r\n                        <React.Fragment>\r\n                            <Button \r\n                                color=\"inherit\" \r\n                                className=\"btn\"\r\n                                style={{\r\n                                    marginLeft:\"200px\"\r\n                                }}\r\n                                component={Link} to=\"/signup\">\r\n                                    Sign Up\r\n                            </Button>\r\n\r\n                            <Button \r\n                                color=\"inherit\" \r\n                                className=\"btn login-btn\"\r\n                                component={Link} to=\"/login\">\r\n                                    Login\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    } \r\n                </Toolbar>\r\n\r\n                <Dialog onClose={()=>{\r\n                    this.setState({openDialog:false})\r\n                }}  fullWidth={true} maxWidth={\"md\"} \r\n                aria-labelledby=\"simple-dialog-title\" \r\n                open={this.state.openDialog}>\r\n                    <div className=\"dialog-title\">Anyone with access to this URL will see your code in real time.</div>\r\n                    <div className=\"url-web\">{window.location.href}</div>\r\n                </Dialog>\r\n\r\n            </AppBar>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NavigationBar;","import React, { Component } from 'react'\r\nimport {NavLink,Redirect } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport TextFieldComponent from \"../TextFieldComponent/textfieldcomponent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {post} from \"../../api-handler\"\r\nclass SignUp extends Component {\r\n    state = { \r\n        FirstName:\"\",\r\n        LastName:\"\",\r\n        Email:\"\",\r\n        Password:\"\",\r\n        ConfirmPassword:\"\",\r\n        LoginID:\"\",\r\n        redirectToLogin:false\r\n    }\r\n    onSignUp=()=>{\r\n        post('/signup',{\r\n            first_name: this.state.FirstName,\r\n            last_name:  this.state.LastName,\r\n            password:   this.state.Password,\r\n            email:      this.state.Email,\r\n            login_id:   this.state.LoginID\r\n        },()=>{\r\n            this.setState({redirectToLogin:true})\r\n        })\r\n    }\r\n    onChangeTextField=(field,value)=>{\r\n        this.setState({\r\n            [field]:value\r\n        })\r\n    }\r\n    render() { \r\n        if(this.state.redirectToLogin) return <Redirect to=\"/login\"/>\r\n        return <div className=\"main-wrapper\">\r\n            <div style={{\r\n            width:\"43%\",\r\n            position:\"absolute\",\r\n            left:\"50%\",\r\n            transform:\"translateX(-50%)\"\r\n            }}>\r\n                <div className=\"login-header\">Welcome To Web Coder</div>\r\n                <form noValidate autoComplete=\"off\" onSubmit={this.onSignUp}>\r\n                    <TextFieldComponent\r\n                        style={{    \r\n                            position: \"relative\",\r\n                            width:\"300px\",\r\n                            left: \"50%\",\r\n                            transform:\" translateX(-50%)\",\r\n                            marginTop : \"20px\"\r\n                        }}\r\n                        label=\"First Name\"\r\n                        value={this.state.FirstName}\r\n                        onChangeTextField={(value)=>this.onChangeTextField(\"FirstName\",value)}\r\n                    /> \r\n                    <TextFieldComponent\r\n                        style={{    \r\n                            position: \"relative\",\r\n                            width:\"300px\",\r\n                            left: \"50%\",\r\n                            transform:\" translateX(-50%)\",\r\n                            marginTop : \"10px\"\r\n                        }}\r\n                        label=\"Last Name\"\r\n                        value={this.state.LastName}\r\n                        onChangeTextField={(value)=>this.onChangeTextField(\"LastName\",value)}\r\n                    /> \r\n                    <TextFieldComponent\r\n                        style={{    \r\n                            position: \"relative\",\r\n                            width:\"300px\",\r\n                            left: \"50%\",\r\n                            transform:\" translateX(-50%)\",\r\n                            marginTop : \"10px\"\r\n                        }}\r\n                        label=\"Email\"\r\n                        value={this.state.Email}\r\n                        onChangeTextField={(value)=>this.onChangeTextField(\"Email\",value)}\r\n                    /> \r\n                    <TextFieldComponent\r\n                        style={{    \r\n                            position: \"relative\",\r\n                            width:\"300px\",\r\n                            left: \"50%\",\r\n                            transform:\" translateX(-50%)\",\r\n                            marginTop: \"10px\"\r\n                        }}\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={this.state.Password}\r\n                        onChangeTextField={(value)=>this.onChangeTextField(\"Password\",value)}\r\n\r\n                    /> \r\n                    <TextFieldComponent\r\n                        style={{    \r\n                            position: \"relative\",\r\n                            width:\"300px\",\r\n                            left: \"50%\",\r\n                            transform:\" translateX(-50%)\",\r\n                            marginTop: \"10px\"\r\n                        }}\r\n                        label=\"Confirm Password\"\r\n                        type=\"ConfirmPassword\"\r\n                        value={this.state.ConfirmPassword}\r\n                        onChangeTextField={(value)=>this.onChangeTextField(\"ConfirmPassword\",value)}\r\n                    /> \r\n                    <Button variant=\"contained\" \r\n                        onClick={this.onSignUp}\r\n                        style={{\r\n                            position:\"relative\",\r\n                            backgroundColor:\"#F25F5C\",\r\n                            color:\"#FFE066\",\r\n                            width:\"300px\",\r\n                            left: \"50%\",\r\n                            transform: \"translateX(-50%)\",\r\n                            marginTop:\"10px\",\r\n                            height:\"45px\",\r\n                            fontSize: \"16px\",\r\n                            fontFamily: \"Spartan\"\r\n                        }}\r\n                    >\r\n                            SIGN UP\r\n                    </Button>\r\n                </form>\r\n                <div className=\"note\">\r\n                    Already have an account? <NavLink className=\"NavLink\" to=\"/login\">Log In</NavLink> .\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport './style.css'\r\nimport { post,get } from '../../api-handler';\r\nimport { Redirect } from 'react-router-dom';\r\nimport io from \"socket.io-client\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Dashboard extends Component {\r\n    state={\r\n        url:\"\",\r\n        redirectToCodeShare:false,\r\n        codes:[]\r\n    }\r\n    getCodesData=()=>{\r\n        post('/yourcodeshares',{\r\n            user:{_id:this.props.user._id}\r\n        }).then((res)=>{\r\n            this.setState({codes:res})\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.socket = io.connect()\r\n        this.getCodesData()\r\n    }\r\n    renderTableHeader = () => {\r\n        return <tr>\r\n            <td>URL</td>\r\n            <td>Title</td>\r\n            <td>Syntax</td>\r\n            <td>ModifiedDate</td>\r\n            <td>CreatedDate</td>\r\n            <td>Action</td>\r\n        </tr>\r\n    }\r\n    renderTableData = () => {\r\n    return this.state.codes.map((data, index) => {\r\n        var {URL, Title, Syntax, ModifiedDate, CreatedDate, _id} = data\r\n        return  (\r\n            <tr key = {index}>\r\n                <td>{\"/\"+URL}</td>\r\n                <td>{Title}</td>\r\n                <td>{Syntax}</td>\r\n                <td>{ModifiedDate}</td>\r\n                <td>{CreatedDate}</td>\r\n                <td> \r\n                    <Button variant=\"contained\" \r\n                    onClick={()=>{\r\n                        post('/deleteCode',{_id}).then((res)=>{\r\n                            this.setState({codes:res})\r\n                        })\r\n                    }}\r\n                    style={{\r\n                        backgroundColor:\"#F25F5C\",\r\n                        color:\"white\"\r\n                    }}>\r\n                        Delete\r\n                    </Button>\r\n                </td>\r\n        </tr>\r\n        )\r\n        })\r\n    }\r\n    ShareCodeNow=()=>{\r\n        post('/newcodeshare',{userId:this.props.user._id}).then((res)=>{\r\n            this.setState({\r\n                url:res.code.URL,\r\n                redirectToCodeShare:true\r\n            })\r\n            this.socket.emit('roomcreated',res.code.URL)\r\n        })\r\n    }\r\n    render() { \r\n        if(this.state.redirectToCodeShare) return <Redirect to={\"/code/\"+this.state.url}/>\r\n        return (\r\n             <div className = \"code-screen\">\r\n            <div className=\"codeshare-heading\">\r\n            <p>Your Codeshares</p>\r\n            </div>\r\n            <div className=\"codeshare-button\">\r\n                <button onClick={this.ShareCodeNow}>New Codeshare</button>\r\n            </div>\r\n            <table className = \"data\">\r\n                <thead>\r\n                    {this.renderTableHeader()}\r\n                    \r\n                </thead>\r\n                <tbody>\r\n                    {this.renderTableData()}\r\n                </tbody>\r\n            </table>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport \"./style.css\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { post } from '../../api-handler';\r\nimport {Redirect} from \"react-router-dom\"\r\nimport io from \"socket.io-client\";\r\n\r\nclass Home extends Component {\r\n    state = { \r\n        url:\"\",\r\n        redirectToCodeShare:false\r\n    }\r\n    componentDidMount(){\r\n        this.socket = io.connect()\r\n\r\n    }\r\n    ShareCodeNow=()=>{\r\n        post('/newcodeshare',{userId:this.props.user._id}).then((res)=>{\r\n            this.setState({\r\n                url:res.code.URL,\r\n                redirectToCodeShare:true\r\n            })\r\n            this.socket.emit('roomcreated',res.code.URL)\r\n        })\r\n    }\r\n    render() { \r\n        if(this.state.redirectToCodeShare) return <Redirect to={\"/code/\"+this.state.url} />\r\n        return ( <div className=\"main-wrapper\">\r\n        <div className=\"main-header\">Share Your Code Live With Developers</div>\r\n        <div className=\"sub-header\">An Online Code editor for interviews, troubleshooting, teaching & more ...</div>\r\n        <Button \r\n            variant=\"contained\" \r\n            className=\"share-btn\"\r\n            onClick={this.ShareCodeNow}>Share Code Now</Button>\r\n\r\n            <Grid container justify=\"center\" className=\"desc-grid\">\r\n                <Grid item>\r\n                    <Paper className=\"desc-paper\">\r\n                        <div className=\"paper-header\">Code with your team</div>\r\n                        <div className=\"paper-desc\">\r\n                            Open a Codeshare editor, write or copy code, then share it with friends and colleagues. Pair program and troubleshoot together.\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Paper className=\"desc-paper\">\r\n                        <div className=\"paper-header\">Interview developers</div>\r\n                        <div className=\"paper-desc\">\r\n                            Set coding tasks and observe in real-time when interviewing remotely or in person. Nobody likes writing code on a whiteboard.\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Paper className=\"desc-paper\">\r\n                        <div className=\"paper-header\">Teach people to program</div>\r\n                        <div className=\"paper-desc\">\r\n                            Share your code with students and peers then educate them. Universities and colleges around the world use Codeshare every day.\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <div className=\"bottom-desc\">\r\n                Created by Muhammad Talib Waseem. For help and support shoot us an email.\r\n            </div>\r\n    </div> );\r\n    }\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport \"./style.css\"\r\n// import MicIcon from '@material-ui/icons/Mic';\r\n// import MicOffIcon from '@material-ui/icons/MicOff';\r\n// import VideocamIcon from '@material-ui/icons/Videocam';\r\n// import VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\n// import GetAppIcon from '@material-ui/icons/GetApp';\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n\r\nclass RightBar extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <div className=\"rightbar\">\r\n            {/* <IconButton><VideocamIcon className=\"rightbar-icons\"/></IconButton>\r\n            <div className=\"line\"></div>\r\n            <IconButton><MicIcon className=\"rightbar-icons\"/></IconButton>\r\n            <div className=\"line\"></div>\r\n            <IconButton><GetAppIcon className=\"rightbar-icons\"/></IconButton>\r\n            <div className=\"line\"></div>\r\n            <IconButton><AddIcon className=\"rightbar-icons\"/></IconButton>\r\n            <div className=\"line\"></div> */}\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default RightBar;","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./style.css\"\r\nimport RightBar from '../RightBar/RightBar';\r\nimport io from \"socket.io-client\";\r\n\r\nclass CodeShareScreen extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.socket = io.connect()\r\n        let id = this.props.match.params.id;\r\n        this.setState({url:id})\r\n        this.socket.emit('join',id)\r\n        this.socket.on('changecode',(code)=>{\r\n            if(this.state.code!==code) this.setState({code:code})\r\n        })\r\n    }\r\n    state = { \r\n        code:\"\",\r\n        url:\"\"\r\n    }\r\n    render() { \r\n        return ( <div className=\"codeshatre-main-wrapper\">\r\n            <textarea \r\n                className=\"code-text\" \r\n                name=\"w3review\" rows=\"4\" cols=\"50\" \r\n                value={this.state.code}\r\n                onChange={(e)=>{\r\n                    this.setState({code:e.target.value})\r\n                    this.socket.emit('changecode',{room:this.state.url,code:e.target.value})\r\n                }}\r\n                placeholder=\"Write or paste code here then share. Anyone you share with will see code as it is typed!\">\r\n            </textarea>\r\n            <RightBar/>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default withRouter(CodeShareScreen);","import React,{ Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport LoginPage from \"./Components/LoginPage/loginPage\";\r\nimport NavigationBar from './Components/NavigationBar/navigation-bar';\r\nimport SignUp from \"./Components/SignUp/signup\"\r\nimport Dashboard from './Components/Dashboard/dashboard';\r\nimport Home from \"./Components/Home/home\"\r\nimport CodeShareScreen from './Components/CodeShare/codeshare';\r\n\r\nclass App extends Component {\r\n  state = { login:false,user:{} }\r\n  componentDidMount(){\r\n    var user=JSON.parse(localStorage.getItem(\"userData\"))\r\n    if(user) this.setState({login:true,user:user})\r\n  }\r\n  render() { \r\n    return ( <div className=\"app-main-div\">\r\n    <BrowserRouter>\r\n      <NavigationBar login={this.state.login} logout={()=>{\r\n        this.setState({login:false})\r\n        localStorage.clear()\r\n      }}></NavigationBar>\r\n      <Route \r\n        exact path=\"/\" \r\n        render={(props) => <Home {...props} user={this.state.user} />}   \r\n      />\r\n      <Route \r\n        exact path=\"/login\" \r\n        render={(props) => <LoginPage {...props} loginTrue={()=>{this.setState({login:true})}} />}  \r\n      />\r\n      <Route \r\n        path=\"/signup\"\r\n        render={(props) => <SignUp {...props} user={this.state.user} />}\r\n      />\r\n      <Route \r\n        path=\"/codes\" \r\n        render={(props) => <Dashboard {...props} user={this.state.user} />} \r\n      />\r\n      <Route path=\"/code/:id\" children={<CodeShareScreen />} />\r\n    </BrowserRouter>\r\n  \r\n  </div> );\r\n  }\r\n}\r\n \r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}